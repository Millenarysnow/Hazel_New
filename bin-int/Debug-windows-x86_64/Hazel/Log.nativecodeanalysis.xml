<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>900</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 fmt::v11::writer::file_。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>fmt::v11::writer::{ctor}</FUNCTION>
    <DECORATED>??0writer@v11@fmt@@QEAA@AEAV?$buffer@D@detail@12@@Z</DECORATED>
    <FUNCLINE>900</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>fmt::v11::writer::file_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\</FILEPATH>
      <FILENAME>common-inl.h</FILENAME>
      <LINE>23</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>枚举类型“spdlog::level::level_enum”未设定范围。相比于 "enum"，首选 "enum class" (Enum.3)。</DESCRIPTION>
    <FUNCTION>spdlog::level::to_string_view</FUNCTION>
    <DECORATED>?to_string_view@level@spdlog@@YAAEBV?$basic_string_view@D@v11@fmt@@W4level_enum@12@@Z</DECORATED>
    <FUNCLINE>23</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>base.h</FILENAME>
      <LINE>1312</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::parse_nonnegative_int</FUNCTION>
    <DECORATED>??$parse_nonnegative_int@D@detail@v11@fmt@@YAHAEAPEBDPEBDH@Z</DECORATED>
    <FUNCLINE>1296</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>base.h</FILENAME>
      <LINE>1313</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 - ，然后将结果转换到 8 字节值。在调用运算符 - 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::parse_nonnegative_int</FUNCTION>
    <DECORATED>??$parse_nonnegative_int@D@detail@v11@fmt@@YAHAEAPEBDPEBDH@Z</DECORATED>
    <FUNCLINE>1296</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>base.h</FILENAME>
      <LINE>1711</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>for 循环定义错误: 初始条件不满足测试。 循环体未执行。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::format_string_checker&lt;char,3,0,0&gt;::on_arg_id</FUNCTION>
    <DECORATED>?on_arg_id@?$format_string_checker@D$02$0A@$0A@@detail@v11@fmt@@QEAAHV?$basic_string_view@D@34@@Z</DECORATED>
    <FUNCLINE>1710</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>base.h</FILENAME>
      <LINE>1711</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>for 循环定义错误: 初始条件不满足测试。 循环体未执行。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::format_string_checker&lt;char,1,0,0&gt;::on_arg_id</FUNCTION>
    <DECORATED>?on_arg_id@?$format_string_checker@D$00$0A@$0A@@detail@v11@fmt@@QEAAHV?$basic_string_view@D@34@@Z</DECORATED>
    <FUNCLINE>1710</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>base.h</FILENAME>
      <LINE>1711</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>for 循环定义错误: 初始条件不满足测试。 循环体未执行。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::format_string_checker&lt;char,2,0,0&gt;::on_arg_id</FUNCTION>
    <DECORATED>?on_arg_id@?$format_string_checker@D$01$0A@$0A@@detail@v11@fmt@@QEAAHV?$basic_string_view@D@34@@Z</DECORATED>
    <FUNCLINE>1710</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2568</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>函数 fmt::v11::detail::num_bits&lt;unsigned __int64&gt; 是 constexpr，如果需要编译时计算，请将变量 shift 标记为 constexpr (con.5)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::bigint::multiply</FUNCTION>
    <DECORATED>??$multiply@Vuint128_fallback@detail@v11@fmt@@$0A@@bigint@detail@v11@fmt@@AEAAXVuint128_fallback@123@@Z</DECORATED>
    <FUNCLINE>2565</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>base.h</FILENAME>
      <LINE>1711</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>for 循环定义错误: 初始条件不满足测试。 循环体未执行。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::format_string_checker&lt;char,0,0,0&gt;::on_arg_id</FUNCTION>
    <DECORATED>?on_arg_id@?$format_string_checker@D$0A@$0A@$0A@@detail@v11@fmt@@QEAAHV?$basic_string_view@D@34@@Z</DECORATED>
    <FUNCLINE>1710</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>3374</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>函数 fmt::v11::detail::exponent_mask&lt;float&gt; 是 constexpr，如果需要编译时计算，请将变量 mask 标记为 constexpr (con.5)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::write</FUNCTION>
    <DECORATED>??$write@DV?$basic_appender@D@v11@fmt@@M$0A@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@M@Z</DECORATED>
    <FUNCLINE>3366</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>3374</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>函数 fmt::v11::detail::exponent_mask&lt;double&gt; 是 constexpr，如果需要编译时计算，请将变量 mask 标记为 constexpr (con.5)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::write</FUNCTION>
    <DECORATED>??$write@DV?$basic_appender@D@v11@fmt@@N$0A@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@N@Z</DECORATED>
    <FUNCLINE>3366</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>3374</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>函数 fmt::v11::detail::exponent_mask&lt;double&gt; 是 constexpr，如果需要编译时计算，请将变量 mask 标记为 constexpr (con.5)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::write</FUNCTION>
    <DECORATED>??$write@DV?$basic_appender@D@v11@fmt@@O$0A@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@O@Z</DECORATED>
    <FUNCLINE>3366</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format-inl.h</FILENAME>
      <LINE>1267</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>函数 fmt::v11::detail::num_significand_bits&lt;float&gt; 是 constexpr，如果需要编译时计算，请将变量 significand_mask 标记为 constexpr (con.5)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::dragonbox::to_decimal</FUNCTION>
    <DECORATED>??$to_decimal@M@dragonbox@detail@v11@fmt@@YA?AU?$decimal_fp@M@0123@M@Z</DECORATED>
    <FUNCLINE>1259</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format-inl.h</FILENAME>
      <LINE>1267</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>函数 fmt::v11::detail::num_significand_bits&lt;double&gt; 是 constexpr，如果需要编译时计算，请将变量 significand_mask 标记为 constexpr (con.5)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::dragonbox::to_decimal</FUNCTION>
    <DECORATED>??$to_decimal@N@dragonbox@detail@v11@fmt@@YA?AU?$decimal_fp@N@0123@N@Z</DECORATED>
    <FUNCLINE>1259</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2339</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@DV?$basic_appender@D@v11@fmt@@U?$decimal_fp@M@dragonbox@detail@23@V?$fallback_digit_grouping@D@623@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBUformat_specs@12@W4sign@12@HVlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2333</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2409</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@DV?$basic_appender@D@v11@fmt@@U?$decimal_fp@M@dragonbox@detail@23@V?$fallback_digit_grouping@D@623@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBUformat_specs@12@W4sign@12@HVlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2333</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2426</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@DV?$basic_appender@D@v11@fmt@@U?$decimal_fp@M@dragonbox@detail@23@V?$fallback_digit_grouping@D@623@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBUformat_specs@12@W4sign@12@HVlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2333</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2426</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@DV?$basic_appender@D@v11@fmt@@U?$decimal_fp@M@dragonbox@detail@23@V?$fallback_digit_grouping@D@623@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBUformat_specs@12@W4sign@12@HVlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2333</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2339</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@DV?$basic_appender@D@v11@fmt@@U?$decimal_fp@M@dragonbox@detail@23@V?$digit_grouping@D@623@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBUformat_specs@12@W4sign@12@HVlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2333</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2409</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@DV?$basic_appender@D@v11@fmt@@U?$decimal_fp@M@dragonbox@detail@23@V?$digit_grouping@D@623@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBUformat_specs@12@W4sign@12@HVlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2333</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2426</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@DV?$basic_appender@D@v11@fmt@@U?$decimal_fp@M@dragonbox@detail@23@V?$digit_grouping@D@623@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBUformat_specs@12@W4sign@12@HVlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2333</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2426</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@DV?$basic_appender@D@v11@fmt@@U?$decimal_fp@M@dragonbox@detail@23@V?$digit_grouping@D@623@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBUformat_specs@12@W4sign@12@HVlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2333</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2339</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@DV?$basic_appender@D@v11@fmt@@U?$decimal_fp@N@dragonbox@detail@23@V?$fallback_digit_grouping@D@623@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBUformat_specs@12@W4sign@12@HVlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2333</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2409</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@DV?$basic_appender@D@v11@fmt@@U?$decimal_fp@N@dragonbox@detail@23@V?$fallback_digit_grouping@D@623@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBUformat_specs@12@W4sign@12@HVlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2333</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2426</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@DV?$basic_appender@D@v11@fmt@@U?$decimal_fp@N@dragonbox@detail@23@V?$fallback_digit_grouping@D@623@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBUformat_specs@12@W4sign@12@HVlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2333</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2426</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@DV?$basic_appender@D@v11@fmt@@U?$decimal_fp@N@dragonbox@detail@23@V?$fallback_digit_grouping@D@623@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBUformat_specs@12@W4sign@12@HVlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2333</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2339</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@DV?$basic_appender@D@v11@fmt@@U?$decimal_fp@N@dragonbox@detail@23@V?$digit_grouping@D@623@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBUformat_specs@12@W4sign@12@HVlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2333</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2409</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@DV?$basic_appender@D@v11@fmt@@U?$decimal_fp@N@dragonbox@detail@23@V?$digit_grouping@D@623@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBUformat_specs@12@W4sign@12@HVlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2333</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2426</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@DV?$basic_appender@D@v11@fmt@@U?$decimal_fp@N@dragonbox@detail@23@V?$digit_grouping@D@623@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBUformat_specs@12@W4sign@12@HVlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2333</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2426</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@DV?$basic_appender@D@v11@fmt@@U?$decimal_fp@N@dragonbox@detail@23@V?$digit_grouping@D@623@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBUformat_specs@12@W4sign@12@HVlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2333</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2064</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::write_int</FUNCTION>
    <DECORATED>??$write_int@DV?$basic_appender@D@v11@fmt@@I@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@U?$write_int_arg@I@012@AEBUformat_specs@12@@Z</DECORATED>
    <FUNCLINE>2017</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2908</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>函数 fmt::v11::detail::num_significand_bits&lt;double&gt; 是 constexpr，如果需要编译时计算，请将变量 num_float_significand_bits 标记为 constexpr (con.5)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::format_hexfloat</FUNCTION>
    <DECORATED>??$format_hexfloat@N$0A@@detail@v11@fmt@@YAXNUformat_specs@12@AEAV?$buffer@D@012@@Z</DECORATED>
    <FUNCLINE>2897</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>3032</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>函数 fmt::v11::detail::num_significand_bits&lt;double&gt; 是 constexpr，如果需要编译时计算，请将变量 significand_mask 标记为 constexpr (con.5)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::format_float</FUNCTION>
    <DECORATED>??$format_float@N@detail@v11@fmt@@YAHNHAEBUformat_specs@12@_NAEAV?$buffer@D@012@@Z</DECORATED>
    <FUNCLINE>2994</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>3023</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 - ，然后将结果转换到 8 字节值。在调用运算符 - 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::format_float</FUNCTION>
    <DECORATED>??$format_float@N@detail@v11@fmt@@YAHNHAEBUformat_specs@12@_NAEAV?$buffer@D@012@@Z</DECORATED>
    <FUNCLINE>2994</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>3023</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::format_float</FUNCTION>
    <DECORATED>??$format_float@N@detail@v11@fmt@@YAHNHAEBUformat_specs@12@_NAEAV?$buffer@D@012@@Z</DECORATED>
    <FUNCLINE>2994</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2272</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::write_significand</FUNCTION>
    <DECORATED>??$write_significand@DI$0A@@detail@v11@fmt@@YAPEADPEADIHHD@Z</DECORATED>
    <FUNCLINE>2269</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2272</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::write_significand</FUNCTION>
    <DECORATED>??$write_significand@D_K$0A@@detail@v11@fmt@@YAPEADPEAD_KHHD@Z</DECORATED>
    <FUNCLINE>2269</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>1228</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 - ，然后将结果转换到 8 字节值。在调用运算符 - 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_format_base2e</FUNCTION>
    <DECORATED>??$do_format_base2e@D_K@detail@v11@fmt@@YAPEADHPEAD_KH_N@Z</DECORATED>
    <FUNCLINE>1223</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>1228</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 &lt;&lt; ，然后将结果转换到 8 字节值。在调用运算符 &lt;&lt; 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_format_base2e</FUNCTION>
    <DECORATED>??$do_format_base2e@D_K@detail@v11@fmt@@YAPEADHPEAD_KH_N@Z</DECORATED>
    <FUNCLINE>1223</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>1537</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>函数 fmt::v11::detail::num_significand_bits&lt;float&gt; 是 constexpr，如果需要编译时计算，请将变量 num_float_significand_bits 标记为 constexpr (con.5)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::basic_fp&lt;fmt::v11::detail::uint128_fallback&gt;::assign</FUNCTION>
    <DECORATED>??$assign@M$0A@@?$basic_fp@Vuint128_fallback@detail@v11@fmt@@@detail@v11@fmt@@QEAA_NM@Z</DECORATED>
    <FUNCLINE>1533</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>1537</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>函数 fmt::v11::detail::num_significand_bits&lt;double&gt; 是 constexpr，如果需要编译时计算，请将变量 num_float_significand_bits 标记为 constexpr (con.5)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::basic_fp&lt;fmt::v11::detail::uint128_fallback&gt;::assign</FUNCTION>
    <DECORATED>??$assign@N$0A@@?$basic_fp@Vuint128_fallback@detail@v11@fmt@@@detail@v11@fmt@@QEAA_NN@Z</DECORATED>
    <FUNCLINE>1533</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2339</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@DV?$basic_appender@D@v11@fmt@@Ubig_decimal_fp@detail@23@V?$fallback_digit_grouping@D@523@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@AEBUbig_decimal_fp@012@AEBUformat_specs@12@W4sign@12@HVlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2333</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2409</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@DV?$basic_appender@D@v11@fmt@@Ubig_decimal_fp@detail@23@V?$fallback_digit_grouping@D@523@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@AEBUbig_decimal_fp@012@AEBUformat_specs@12@W4sign@12@HVlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2333</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2426</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@DV?$basic_appender@D@v11@fmt@@Ubig_decimal_fp@detail@23@V?$fallback_digit_grouping@D@523@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@AEBUbig_decimal_fp@012@AEBUformat_specs@12@W4sign@12@HVlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2333</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2426</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@DV?$basic_appender@D@v11@fmt@@Ubig_decimal_fp@detail@23@V?$fallback_digit_grouping@D@523@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@AEBUbig_decimal_fp@012@AEBUformat_specs@12@W4sign@12@HVlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2333</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2339</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@DV?$basic_appender@D@v11@fmt@@Ubig_decimal_fp@detail@23@V?$digit_grouping@D@523@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@AEBUbig_decimal_fp@012@AEBUformat_specs@12@W4sign@12@HVlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2333</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2409</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@DV?$basic_appender@D@v11@fmt@@Ubig_decimal_fp@detail@23@V?$digit_grouping@D@523@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@AEBUbig_decimal_fp@012@AEBUformat_specs@12@W4sign@12@HVlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2333</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2426</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@DV?$basic_appender@D@v11@fmt@@Ubig_decimal_fp@detail@23@V?$digit_grouping@D@523@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@AEBUbig_decimal_fp@012@AEBUformat_specs@12@W4sign@12@HVlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2333</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2426</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@DV?$basic_appender@D@v11@fmt@@Ubig_decimal_fp@detail@23@V?$digit_grouping@D@523@@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@AEBUbig_decimal_fp@012@AEBUformat_specs@12@W4sign@12@HVlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2333</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2064</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::write_int</FUNCTION>
    <DECORATED>??$write_int@DV?$basic_appender@D@v11@fmt@@_K@detail@v11@fmt@@YA?AV?$basic_appender@D@12@V312@U?$write_int_arg@_K@012@AEBUformat_specs@12@@Z</DECORATED>
    <FUNCLINE>2017</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\CppProgram\Hazel\Hazel\vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>1537</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>函数 fmt::v11::detail::num_significand_bits&lt;double&gt; 是 constexpr，如果需要编译时计算，请将变量 num_float_significand_bits 标记为 constexpr (con.5)。</DESCRIPTION>
    <FUNCTION>fmt::v11::detail::basic_fp&lt;unsigned __int64&gt;::assign</FUNCTION>
    <DECORATED>??$assign@N$0A@@?$basic_fp@_K@detail@v11@fmt@@QEAA_NN@Z</DECORATED>
    <FUNCLINE>1533</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>